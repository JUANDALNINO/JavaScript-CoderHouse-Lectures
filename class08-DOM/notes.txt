COPIAR Y PEGAR EN DOCUMENTO JS PARA VER

/*
DOM
    => Usar todos los documentos en HTML en JS
    => Objetos = métodos y propiedades

    => Convertir un documento HTML en un módelo de Objetos para interactuar

h1 => heading más importante



---> Arbol de nodos
        Ramas => padres e hijos

*/

//   ACCESO AL DOM

//     document. => es un objeto global al cual accedo a un nodo
// Body = accedo a la etiqueta body
    const nodoPrincipal = document.body; // => Esto es un objeto
    console.log(nodoPrincipal);


// Métodos para acceder a los Nodos empleando Document:
    // 1. getElementById => recibe un string = el id que se le colocó a la etiqueta
    // Devuelve el primero que encuentre con el id => es por esto que los id no deben estar repetidos
    const nodoDiv = document.getElementById("container");
    console.log(nodoDiv);

    // 2. getElementsByClassName => conjunto de elementos de la estructura HTML con clase
    // Devuelve todos los elementos con class
    const paises = document.getElementsByClassName("paises");
    console.log(paises);

    // 3. getElementsByTagName => Nombre de etiqueta como identificación
        // Es la menos específica porque pueden haber varios
    const h1 = document.getElementsByTagName("h1");
    console.log(h1);


    // Recorrer una colección:
    console.log("Todos los h1");
    for (let titles of h1) {
        console.log(titles)
    }





//   MODIFICAR NODOS => cambiar el contenido

// Exercise:
    // Modificar el contenido en html
    // Pedir nombre
    let name = prompt("Ingrese su nombre");

    // Mostrar en h1 => elemento en la posición [0]
    const titH1 = document.getElementsByTagName("h1")[0];

// 1. innerText => Modificar el nodo de texto. Acceder o modificar el contenido del DOM
    // Imprimir en el documento el nombre
    titH1.innerText = `!Bienvenido, ${name}!`;
11

// 2. innerHTML
// Sin [] => porque es único
    const div = document.getElementById("miContenido");
    div.innerHTML = `<b>Esto es negrita</b><br>
                        Esto no es negrita<br>
                        <i>Esto es italica</i>
                        <p>Esto es un parrafo</p>
                        ${name}`;




//   2. className
// A través de la propiedad className de algún nodo seleccionado podemos acceder al atributo class del mismo y definir cuáles van a ser sus clases:

    //CODIGO HTML DE REFERENCIA
    <div id=”contenedor”></div>
    //CODIGO JS
    let container = document.getElementById("contenedor")
    // cambio el código HTML interno
    container.innerHTML = “<h2>Hola mundo!</h2>”
    // cambio el atributo class
    container.className = “container row”
    //Resultado en el DOM
    <div id=”contenedor” class=“container row”>
        <h2>Hola mundo!</h2>
    </div>




//      AGREGAR O QUITAR NODOS

// 1. crear elementos 
// se utiliza la función document.createElement(), y se debe indicar el nombre de etiqueta HTML que representará ese elemento.

    // 1. Crear nodo de tipo Elemento, etiqueta p
    let parrafo = document.createElement("p");

    // 2. Insertar HTML interno
    parrafo.innerHTML = "<h2>¡Hola Coder!</h2>"; 

    // 3. Añadir el nodo Element como hijo de body
    document.body.append(parrafo);


// Array de mascotas
const mascotas = ["Pandoro", "Lucas", "Roni", "Tyron", "Simona", "Luna"]

const title = document.getElementsByTagName("h3")[0];
    title.innerText = "Mascotas";

const elemento = document.createElement("ul");
    mascotas.forEach( (mascota) => {
        const nodoLi = document.createElement("li");

        nodoLi.innerText = mascota;

        elemento.appendChild(nodoLi);
    });

document.body.appendChild(elemento);


// 2. Eliminar elementos:
// Se pueden eliminar nodos existentes y nuevos. El método remove() permite eliminar un nodo seleccionado del DOM:

    let parrafo = document.getElementById("parrafo1");
    //Elminando el propio elemento
    parrafo.remove();

    let paises = document.getElementsByClassName("paises");
    //Eliminando el primer elemento de clase paises
    paises[0].remove()



// 2. Obtener datos de los inputs:
// Accediendo a la propiedad value de cada input seleccionado:

/CODIGO HTML DE REFERENCIA
  <input id = "nombre" type="text">
  <input id = "edad"   type="number">

//CODIGO JS
document.getElementById("nombre").value = "HOMERO";
document.getElementById("edad").value   = 39;




// Array de mascotas
const mascotas = ["Pandoro", "Lucas", "Roni", "Tyron", "Simona", "Luna"]

const title = document.getElementsByTagName("h3")[0];
    title.innerText = "Mascotas";

const elemento = document.createElement("ul");
    mascotas.forEach( (mascota) => {
        const nodoLi = document.createElement("li");

        nodoLi.innerText = mascota;

        elemento.appendChild(nodoLi);
    });

document.body.appendChild(elemento);




// Inputs:
const nombre = document.getElementById("nombre").value;
alert(nombre);

const edad = document.getElementById("edad").value;
alert(edad);



//Obtenemos el nodo donde vamos a agregar los nuevos elementos
let padre = document.getElementById("personas");
//Array con la información a agregar
let personas = ["HOMERO","MARGE", "BART", "LISA","MAGGIE"];
//Iteramos el array con for...of
for (const persona of personas) {
    //Creamos un nodo <li> y agregamos al padre en cada ciclo
    let li = document.createElement("li");
    li.innerHTML = persona
    padre.appendChild(li);
}




//     PLANTILLAS DE TEXTO
// template strings.


